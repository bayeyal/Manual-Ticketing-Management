import { MigrationInterface, QueryRunner } from "typeorm";

export class RemovePageIdFromTasks1750762732725 implements MigrationInterface {
    name = 'RemovePageIdFromTasks1750762732725'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "page" DROP CONSTRAINT "page_projectId_fkey"`);
        await queryRunner.query(`ALTER TABLE "project" DROP CONSTRAINT "project_projectAdminId_fkey"`);
        await queryRunner.query(`ALTER TABLE "task" DROP CONSTRAINT "task_assignedToId_fkey"`);
        await queryRunner.query(`ALTER TABLE "task" DROP CONSTRAINT "task_auditorId_fkey"`);
        await queryRunner.query(`ALTER TABLE "task" DROP CONSTRAINT "task_projectId_fkey"`);
        await queryRunner.query(`ALTER TABLE "task" DROP CONSTRAINT "task_pageId_fkey"`);
        await queryRunner.query(`ALTER TABLE "task_message" DROP CONSTRAINT "task_message_taskId_fkey"`);
        await queryRunner.query(`ALTER TABLE "task_message" DROP CONSTRAINT "task_message_userId_fkey"`);
        await queryRunner.query(`ALTER TABLE "task_message" DROP CONSTRAINT "task_message_mentionedUserId_fkey"`);
        await queryRunner.query(`ALTER TABLE "project_auditors" DROP CONSTRAINT "project_auditors_projectId_fkey"`);
        await queryRunner.query(`ALTER TABLE "project_auditors" DROP CONSTRAINT "project_auditors_userId_fkey"`);
        await queryRunner.query(`ALTER TABLE "project_assigned_users" DROP CONSTRAINT "project_assigned_users_projectId_fkey"`);
        await queryRunner.query(`ALTER TABLE "project_assigned_users" DROP CONSTRAINT "project_assigned_users_userId_fkey"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_page_project"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_project_admin"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_task_project"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_task_assigned"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_task_auditor"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_task_page"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_task_message_task"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_task_message_user"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_user_email"`);
        await queryRunner.query(`ALTER TABLE "task" DROP COLUMN "pageId"`);
        await queryRunner.query(`ALTER TABLE "user" DROP COLUMN "createdAt"`);
        await queryRunner.query(`ALTER TABLE "user" DROP COLUMN "updatedAt"`);
        await queryRunner.query(`ALTER TABLE "page" ALTER COLUMN "projectId" SET NOT NULL`);
        await queryRunner.query(`ALTER TABLE "project" DROP COLUMN "description"`);
        await queryRunner.query(`ALTER TABLE "project" ADD "description" character varying`);
        await queryRunner.query(`ALTER TABLE "project" DROP COLUMN "auditType"`);
        await queryRunner.query(`CREATE TYPE "public"."project_audittype_enum" AS ENUM('WCAG_2_0', 'WCAG_2_1', 'WCAG_2_2')`);
        await queryRunner.query(`ALTER TABLE "project" ADD "auditType" "public"."project_audittype_enum" NOT NULL DEFAULT 'WCAG_2_1'`);
        await queryRunner.query(`ALTER TABLE "project" DROP COLUMN "auditLevel"`);
        await queryRunner.query(`CREATE TYPE "public"."project_auditlevel_enum" AS ENUM('A', 'AA', 'AAA')`);
        await queryRunner.query(`ALTER TABLE "project" ADD "auditLevel" "public"."project_auditlevel_enum" NOT NULL DEFAULT 'AA'`);
        await queryRunner.query(`ALTER TABLE "project" DROP COLUMN "status"`);
        await queryRunner.query(`CREATE TYPE "public"."project_status_enum" AS ENUM('NEW', 'IN_PROGRESS', 'REVIEW', 'COMPLETED', 'ON_HOLD')`);
        await queryRunner.query(`ALTER TABLE "project" ADD "status" "public"."project_status_enum" NOT NULL DEFAULT 'NEW'`);
        await queryRunner.query(`ALTER TABLE "task" DROP COLUMN "severity"`);
        await queryRunner.query(`CREATE TYPE "public"."task_severity_enum" AS ENUM('LOW', 'MODERATE', 'HIGH', 'CRITICAL')`);
        await queryRunner.query(`ALTER TABLE "task" ADD "severity" "public"."task_severity_enum" NOT NULL DEFAULT 'MODERATE'`);
        await queryRunner.query(`ALTER TABLE "task" DROP COLUMN "status"`);
        await queryRunner.query(`CREATE TYPE "public"."task_status_enum" AS ENUM('NEW', 'IN_PROGRESS', 'REVIEW', 'COMPLETED', 'BLOCKED')`);
        await queryRunner.query(`ALTER TABLE "task" ADD "status" "public"."task_status_enum" NOT NULL DEFAULT 'NEW'`);
        await queryRunner.query(`ALTER TABLE "task" DROP COLUMN "priority"`);
        await queryRunner.query(`CREATE TYPE "public"."task_priority_enum" AS ENUM('LOW', 'MEDIUM', 'HIGH', 'URGENT')`);
        await queryRunner.query(`ALTER TABLE "task" ADD "priority" "public"."task_priority_enum" NOT NULL DEFAULT 'MEDIUM'`);
        await queryRunner.query(`ALTER TABLE "user" DROP COLUMN "role"`);
        await queryRunner.query(`CREATE TYPE "public"."user_role_enum" AS ENUM('SUPER_ADMIN', 'ACCOUNT_ADMIN', 'PROJECT_ADMIN', 'USER')`);
        await queryRunner.query(`ALTER TABLE "user" ADD "role" "public"."user_role_enum" NOT NULL DEFAULT 'USER'`);
        await queryRunner.query(`CREATE INDEX "IDX_5b1c055b07e00d779b501ea25b" ON "project_auditors" ("projectId") `);
        await queryRunner.query(`CREATE INDEX "IDX_cafed120633301963b6c6c00d0" ON "project_auditors" ("userId") `);
        await queryRunner.query(`CREATE INDEX "IDX_135ee9f60c58237978f7ae90a1" ON "project_assigned_users" ("projectId") `);
        await queryRunner.query(`CREATE INDEX "IDX_2ea4a82a788c6eb72639da1160" ON "project_assigned_users" ("userId") `);
        await queryRunner.query(`ALTER TABLE "page" ADD CONSTRAINT "FK_2d80076945d659dc90bbd11865a" FOREIGN KEY ("projectId") REFERENCES "project"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "project" ADD CONSTRAINT "FK_22fca2f729c2375d4169670fb6d" FOREIGN KEY ("projectAdminId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "task" ADD CONSTRAINT "FK_fd5f652e2fcdc4a5ab30aaff7a7" FOREIGN KEY ("assignedToId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "task" ADD CONSTRAINT "FK_46060074db7aeead718eca7a62a" FOREIGN KEY ("auditorId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "task" ADD CONSTRAINT "FK_3797a20ef5553ae87af126bc2fe" FOREIGN KEY ("projectId") REFERENCES "project"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "task_message" ADD CONSTRAINT "FK_8d920ada6d97d6bf16bf313b8f9" FOREIGN KEY ("taskId") REFERENCES "task"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "task_message" ADD CONSTRAINT "FK_65712e0ce553b158a957cb02fe5" FOREIGN KEY ("userId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "task_message" ADD CONSTRAINT "FK_2a614c7b53d3b75eb8d027d47c5" FOREIGN KEY ("mentionedUserId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "project_auditors" ADD CONSTRAINT "FK_5b1c055b07e00d779b501ea25b1" FOREIGN KEY ("projectId") REFERENCES "project"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "project_auditors" ADD CONSTRAINT "FK_cafed120633301963b6c6c00d05" FOREIGN KEY ("userId") REFERENCES "user"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "project_assigned_users" ADD CONSTRAINT "FK_135ee9f60c58237978f7ae90a18" FOREIGN KEY ("projectId") REFERENCES "project"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
        await queryRunner.query(`ALTER TABLE "project_assigned_users" ADD CONSTRAINT "FK_2ea4a82a788c6eb72639da1160a" FOREIGN KEY ("userId") REFERENCES "user"("id") ON DELETE CASCADE ON UPDATE CASCADE`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "project_assigned_users" DROP CONSTRAINT "FK_2ea4a82a788c6eb72639da1160a"`);
        await queryRunner.query(`ALTER TABLE "project_assigned_users" DROP CONSTRAINT "FK_135ee9f60c58237978f7ae90a18"`);
        await queryRunner.query(`ALTER TABLE "project_auditors" DROP CONSTRAINT "FK_cafed120633301963b6c6c00d05"`);
        await queryRunner.query(`ALTER TABLE "project_auditors" DROP CONSTRAINT "FK_5b1c055b07e00d779b501ea25b1"`);
        await queryRunner.query(`ALTER TABLE "task_message" DROP CONSTRAINT "FK_2a614c7b53d3b75eb8d027d47c5"`);
        await queryRunner.query(`ALTER TABLE "task_message" DROP CONSTRAINT "FK_65712e0ce553b158a957cb02fe5"`);
        await queryRunner.query(`ALTER TABLE "task_message" DROP CONSTRAINT "FK_8d920ada6d97d6bf16bf313b8f9"`);
        await queryRunner.query(`ALTER TABLE "task" DROP CONSTRAINT "FK_3797a20ef5553ae87af126bc2fe"`);
        await queryRunner.query(`ALTER TABLE "task" DROP CONSTRAINT "FK_46060074db7aeead718eca7a62a"`);
        await queryRunner.query(`ALTER TABLE "task" DROP CONSTRAINT "FK_fd5f652e2fcdc4a5ab30aaff7a7"`);
        await queryRunner.query(`ALTER TABLE "project" DROP CONSTRAINT "FK_22fca2f729c2375d4169670fb6d"`);
        await queryRunner.query(`ALTER TABLE "page" DROP CONSTRAINT "FK_2d80076945d659dc90bbd11865a"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_2ea4a82a788c6eb72639da1160"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_135ee9f60c58237978f7ae90a1"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_cafed120633301963b6c6c00d0"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_5b1c055b07e00d779b501ea25b"`);
        await queryRunner.query(`ALTER TABLE "user" DROP COLUMN "role"`);
        await queryRunner.query(`DROP TYPE "public"."user_role_enum"`);
        await queryRunner.query(`ALTER TABLE "user" ADD "role" character varying NOT NULL DEFAULT 'USER'`);
        await queryRunner.query(`ALTER TABLE "task" DROP COLUMN "priority"`);
        await queryRunner.query(`DROP TYPE "public"."task_priority_enum"`);
        await queryRunner.query(`ALTER TABLE "task" ADD "priority" character varying NOT NULL DEFAULT 'MEDIUM'`);
        await queryRunner.query(`ALTER TABLE "task" DROP COLUMN "status"`);
        await queryRunner.query(`DROP TYPE "public"."task_status_enum"`);
        await queryRunner.query(`ALTER TABLE "task" ADD "status" character varying NOT NULL DEFAULT 'NEW'`);
        await queryRunner.query(`ALTER TABLE "task" DROP COLUMN "severity"`);
        await queryRunner.query(`DROP TYPE "public"."task_severity_enum"`);
        await queryRunner.query(`ALTER TABLE "task" ADD "severity" character varying NOT NULL DEFAULT 'MODERATE'`);
        await queryRunner.query(`ALTER TABLE "project" DROP COLUMN "status"`);
        await queryRunner.query(`DROP TYPE "public"."project_status_enum"`);
        await queryRunner.query(`ALTER TABLE "project" ADD "status" character varying NOT NULL DEFAULT 'NEW'`);
        await queryRunner.query(`ALTER TABLE "project" DROP COLUMN "auditLevel"`);
        await queryRunner.query(`DROP TYPE "public"."project_auditlevel_enum"`);
        await queryRunner.query(`ALTER TABLE "project" ADD "auditLevel" character varying NOT NULL DEFAULT 'AA'`);
        await queryRunner.query(`ALTER TABLE "project" DROP COLUMN "auditType"`);
        await queryRunner.query(`DROP TYPE "public"."project_audittype_enum"`);
        await queryRunner.query(`ALTER TABLE "project" ADD "auditType" character varying NOT NULL DEFAULT 'WCAG_2_1'`);
        await queryRunner.query(`ALTER TABLE "project" DROP COLUMN "description"`);
        await queryRunner.query(`ALTER TABLE "project" ADD "description" text`);
        await queryRunner.query(`ALTER TABLE "page" ALTER COLUMN "projectId" DROP NOT NULL`);
        await queryRunner.query(`ALTER TABLE "user" ADD "updatedAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "user" ADD "createdAt" TIMESTAMP NOT NULL DEFAULT now()`);
        await queryRunner.query(`ALTER TABLE "task" ADD "pageId" integer`);
        await queryRunner.query(`CREATE INDEX "IDX_user_email" ON "user" ("email") `);
        await queryRunner.query(`CREATE INDEX "IDX_task_message_user" ON "task_message" ("userId") `);
        await queryRunner.query(`CREATE INDEX "IDX_task_message_task" ON "task_message" ("taskId") `);
        await queryRunner.query(`CREATE INDEX "IDX_task_page" ON "task" ("pageId") `);
        await queryRunner.query(`CREATE INDEX "IDX_task_auditor" ON "task" ("auditorId") `);
        await queryRunner.query(`CREATE INDEX "IDX_task_assigned" ON "task" ("assignedToId") `);
        await queryRunner.query(`CREATE INDEX "IDX_task_project" ON "task" ("projectId") `);
        await queryRunner.query(`CREATE INDEX "IDX_project_admin" ON "project" ("projectAdminId") `);
        await queryRunner.query(`CREATE INDEX "IDX_page_project" ON "page" ("projectId") `);
        await queryRunner.query(`ALTER TABLE "project_assigned_users" ADD CONSTRAINT "project_assigned_users_userId_fkey" FOREIGN KEY ("userId") REFERENCES "user"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "project_assigned_users" ADD CONSTRAINT "project_assigned_users_projectId_fkey" FOREIGN KEY ("projectId") REFERENCES "project"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "project_auditors" ADD CONSTRAINT "project_auditors_userId_fkey" FOREIGN KEY ("userId") REFERENCES "user"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "project_auditors" ADD CONSTRAINT "project_auditors_projectId_fkey" FOREIGN KEY ("projectId") REFERENCES "project"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "task_message" ADD CONSTRAINT "task_message_mentionedUserId_fkey" FOREIGN KEY ("mentionedUserId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "task_message" ADD CONSTRAINT "task_message_userId_fkey" FOREIGN KEY ("userId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "task_message" ADD CONSTRAINT "task_message_taskId_fkey" FOREIGN KEY ("taskId") REFERENCES "task"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "task" ADD CONSTRAINT "task_pageId_fkey" FOREIGN KEY ("pageId") REFERENCES "page"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "task" ADD CONSTRAINT "task_projectId_fkey" FOREIGN KEY ("projectId") REFERENCES "project"("id") ON DELETE SET NULL ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "task" ADD CONSTRAINT "task_auditorId_fkey" FOREIGN KEY ("auditorId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "task" ADD CONSTRAINT "task_assignedToId_fkey" FOREIGN KEY ("assignedToId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "project" ADD CONSTRAINT "project_projectAdminId_fkey" FOREIGN KEY ("projectAdminId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "page" ADD CONSTRAINT "page_projectId_fkey" FOREIGN KEY ("projectId") REFERENCES "project"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
    }

}
